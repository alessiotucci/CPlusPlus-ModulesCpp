!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/nfs/homes/atucci/Desktop/CPlusPlus-ModulesCpp/cpp09/ex00/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	//
$(NAME)	Makefile	/^$(NAME): $(OBJ)$/;"	t
%.o	Makefile	/^%.o: %.cpp$/;"	t
BITCOINEXCHANGE_HPP	BitcoinExchange.hpp	/^#define BITCOINEXCHANGE_HPP$/;"	d
Btc	BitcoinExchange.cpp	/^Btc::Btc() : _db()$/;"	f	class:Btc
Btc	BitcoinExchange.cpp	/^Btc::Btc(const Btc &other)$/;"	f	class:Btc
Btc	BitcoinExchange.hpp	/^class Btc$/;"	c
CXX	Makefile	/^CXX = c++$/;"	m
CYAN	Makefile	/^CYAN := \\033[1;36m$/;"	m
FLAG	Makefile	/^FLAG = -Wall -Wextra -Werror -std=c++98$/;"	m
GREEN	Makefile	/^GREEN := \\033[1;32m$/;"	m
HEADERS	Makefile	/^HEADERS = BitcoinExchange.hpp \\$/;"	m
NAME	Makefile	/^NAME = btc$/;"	m
RED	Makefile	/^RED := \\033[1;31m$/;"	m
RESET	Makefile	/^RESET := \\033[0m$/;"	m
SOURCE	Makefile	/^SOURCE = BitcoinExchange.cpp \\$/;"	m
YELLOW	Makefile	/^YELLOW := \\033[1;33m$/;"	m
_db	BitcoinExchange.hpp	/^	std::map<std::string, double> _db; \/\/ later: database (date -> price)$/;"	m	class:Btc	typeref:typename:std::map<std::string,double>
all	Makefile	/^all: $(NAME)$/;"	t
clean	Makefile	/^clean:$/;"	t
fclean	Makefile	/^fclean: clean$/;"	t
hidden	Makefile	/^hidden:$/;"	t
isDigits	BitcoinExchange.cpp	/^static bool isDigits(const std::string &s)$/;"	f	typeref:typename:bool	file:
isValidDate	BitcoinExchange.cpp	/^static bool isValidDate(const std::string &date)$/;"	f	typeref:typename:bool	file:
loadDatabase	BitcoinExchange.cpp	/^bool Btc::loadDatabase(const std::string &dbfile)$/;"	f	class:Btc	typeref:typename:bool
main	main.cpp	/^int main(int ac, char **av)$/;"	f	typeref:typename:int
operator =	BitcoinExchange.cpp	/^Btc& Btc::operator=(const Btc &other)$/;"	f	class:Btc	typeref:typename:Btc &
parseInputLine	BitcoinExchange.cpp	/^static bool parseInputLine(const std::string &line, std::string &out_date, double &out_value)$/;"	f	typeref:typename:bool	file:
processInputFile	BitcoinExchange.cpp	/^bool Btc::processInputFile(const std::string &inputfile)$/;"	f	class:Btc	typeref:typename:bool
re	Makefile	/^re: fclean all$/;"	t
trim	BitcoinExchange.cpp	/^static std::string trim(const std::string &s)$/;"	f	typeref:typename:std::string	file:
~Btc	BitcoinExchange.cpp	/^Btc::~Btc()$/;"	f	class:Btc
